
// Generated by Cadence Encounter(R) RTL Compiler RC14.28 - v14.20-s067_1

// Verification Directory fv/dsc_mac_top 

module counter_WIDTH1(out, clk, en, rst, overflow);
  input clk, en, rst;
  output [0:0] out;
  output overflow;
  wire clk, en, rst;
  wire [0:0] out;
  wire overflow;
  wire n_1, n_2, n_4;
  INVX1 g7(.A (rst), .Y (n_4));
  DFFSR \out_reg[0] (.R (n_4), .S (1'b1), .CLK (clk), .D (n_1), .Q
       (n_2));
  XOR2X1 g8(.A (out), .B (en), .Y (n_1));
  BUFX2 drc_bufs12(.A (n_2), .Y (out));
endmodule

module det_stoch_scale_add(a, b, s, y);
  input a, b, s;
  output y;
  wire a, b, s;
  wire y;
  wire n_7;
  INVX1 g3(.A (n_7), .Y (y));
  MUX2X1 g2(.A (b), .B (a), .S (s), .Y (n_7));
endmodule

module det_stoch_mul(a, b, y);
  input a, b;
  output y;
  wire a, b;
  wire y;
  AND2X1 g8(.A (b), .B (a), .Y (y));
endmodule

module comp_1b(a, b, equal, a_larger);
  input a, b;
  output equal, a_larger;
  wire a, b;
  wire equal, a_larger;
  wire n_1;
  AND2X1 g14(.A (n_1), .B (a), .Y (a_larger));
  INVX1 g15(.A (b), .Y (n_1));
endmodule

module comp_1b_1(a, b, equal, a_larger);
  input a, b;
  output equal, a_larger;
  wire a, b;
  wire equal, a_larger;
  wire n_0;
  HAX1 g27(.A (a), .B (n_0), .YC (a_larger), .YS (equal));
  INVX1 g28(.A (b), .Y (n_0));
endmodule

module comp_1b_2(a, b, equal, a_larger);
  input a, b;
  output equal, a_larger;
  wire a, b;
  wire equal, a_larger;
  wire n_0;
  HAX1 g27(.A (a), .B (n_0), .YC (a_larger), .YS (equal));
  INVX1 g28(.A (b), .Y (n_0));
endmodule

module comp_1b_3(a, b, equal, a_larger);
  input a, b;
  output equal, a_larger;
  wire a, b;
  wire equal, a_larger;
  wire n_0;
  HAX1 g27(.A (a), .B (n_0), .YC (a_larger), .YS (equal));
  INVX1 g28(.A (b), .Y (n_0));
endmodule

module comp_4b(a_gt_b, a, b);
  input [3:0] a, b;
  output a_gt_b;
  wire [3:0] a, b;
  wire a_gt_b;
  wire UNCONNECTED, agt, agt_9, agt_11, agt_16, e, e_13, e_19;
  wire n_0, n_1, n_2, n_3, n_4, n_5, n_6;
  comp_1b comp0(.a (a[0]), .b (b[0]), .equal (UNCONNECTED), .a_larger
       (agt_16));
  comp_1b_1 comp1(.a (a[1]), .b (b[1]), .equal (e_19), .a_larger
       (agt_11));
  comp_1b_2 comp2(.a (a[2]), .b (b[2]), .equal (e_13), .a_larger (agt));
  comp_1b_3 comp3(.a (a[3]), .b (b[3]), .equal (e), .a_larger (agt_9));
  INVX1 g12(.A (e), .Y (n_6));
  INVX1 g13(.A (agt_9), .Y (n_5));
  OAI21X1 g73(.A (n_6), .B (n_1), .C (n_5), .Y (a_gt_b));
  AOI21X1 g74(.A (e_13), .B (n_3), .C (agt), .Y (n_4));
  INVX1 g75(.A (n_0), .Y (n_3));
  AOI21X1 g76(.A (agt_16), .B (e_19), .C (agt_11), .Y (n_2));
  BUFX2 drc_bufs(.A (n_4), .Y (n_1));
  BUFX2 drc_bufs77(.A (n_2), .Y (n_0));
endmodule

module counter_WIDTH4(out, clk, en, rst, overflow);
  input clk, en, rst;
  output [3:0] out;
  output overflow;
  wire clk, en, rst;
  wire [3:0] out;
  wire overflow;
  wire n_0, n_7, n_8, n_9, n_10, n_11, n_12, n_13;
  wire n_14, n_15, n_16, n_17, n_18, n_19, n_20, n_21;
  wire n_26, n_27, n_28, n_29;
  DFFSR \out_reg[3] (.R (n_7), .S (1'b1), .CLK (clk), .D (n_19), .Q
       (n_26));
  DFFSR overflow_reg(.R (n_7), .S (1'b1), .CLK (clk), .D (n_21), .Q
       (overflow));
  INVX1 g65(.A (n_20), .Y (n_21));
  MUX2X1 g66(.A (n_16), .B (overflow), .S (en), .Y (n_20));
  INVX1 g67(.A (n_18), .Y (n_19));
  MUX2X1 g68(.A (n_17), .B (out[3]), .S (en), .Y (n_18));
  DFFSR \out_reg[2] (.R (n_7), .S (1'b1), .CLK (clk), .D (n_15), .Q
       (n_27));
  HAX1 g70(.A (out[3]), .B (n_12), .YC (n_16), .YS (n_17));
  INVX1 g71(.A (n_14), .Y (n_15));
  MUX2X1 g72(.A (n_13), .B (out[2]), .S (en), .Y (n_14));
  DFFSR \out_reg[1] (.R (n_7), .S (1'b1), .CLK (clk), .D (n_11), .Q
       (n_28));
  HAX1 g74(.A (out[2]), .B (n_8), .YC (n_12), .YS (n_13));
  INVX1 g75(.A (n_10), .Y (n_11));
  MUX2X1 g76(.A (n_9), .B (out[1]), .S (en), .Y (n_10));
  DFFSR \out_reg[0] (.R (n_7), .S (1'b1), .CLK (clk), .D (n_0), .Q
       (n_29));
  HAX1 g78(.A (out[1]), .B (out[0]), .YC (n_8), .YS (n_9));
  INVX1 g81(.A (rst), .Y (n_7));
  BUFX2 drc_bufs101(.A (n_29), .Y (out[0]));
  BUFX2 drc_bufs103(.A (n_26), .Y (out[3]));
  BUFX2 drc_bufs104(.A (n_27), .Y (out[2]));
  BUFX2 drc_bufs105(.A (n_28), .Y (out[1]));
  XOR2X1 g2(.A (en), .B (out[0]), .Y (n_0));
endmodule

module prg_4b(clk, rst, en, bin_in, sn_out, ctr_overflow);
  input clk, rst, en;
  input [3:0] bin_in;
  output sn_out, ctr_overflow;
  wire clk, rst, en;
  wire [3:0] bin_in;
  wire sn_out, ctr_overflow;
  wire [3:0] ctr4_out;
  comp_4b comp4(.a_gt_b (sn_out), .a (bin_in), .b (ctr4_out));
  counter_WIDTH4 ctr4(.out (ctr4_out), .clk (clk), .en (en), .rst
       (rst), .overflow (ctr_overflow));
endmodule

module comp_1b_12(a, b, equal, a_larger);
  input a, b;
  output equal, a_larger;
  wire a, b;
  wire equal, a_larger;
  wire n_1;
  AND2X1 g14(.A (n_1), .B (a), .Y (a_larger));
  INVX1 g15(.A (b), .Y (n_1));
endmodule

module comp_1b_13(a, b, equal, a_larger);
  input a, b;
  output equal, a_larger;
  wire a, b;
  wire equal, a_larger;
  wire n_0;
  HAX1 g27(.A (a), .B (n_0), .YC (a_larger), .YS (equal));
  INVX1 g28(.A (b), .Y (n_0));
endmodule

module comp_1b_14(a, b, equal, a_larger);
  input a, b;
  output equal, a_larger;
  wire a, b;
  wire equal, a_larger;
  wire n_0;
  HAX1 g27(.A (a), .B (n_0), .YC (a_larger), .YS (equal));
  INVX1 g28(.A (b), .Y (n_0));
endmodule

module comp_1b_15(a, b, equal, a_larger);
  input a, b;
  output equal, a_larger;
  wire a, b;
  wire equal, a_larger;
  wire n_0;
  HAX1 g27(.A (a), .B (n_0), .YC (a_larger), .YS (equal));
  INVX1 g28(.A (b), .Y (n_0));
endmodule

module comp_4b_1(a_gt_b, a, b);
  input [3:0] a, b;
  output a_gt_b;
  wire [3:0] a, b;
  wire a_gt_b;
  wire UNCONNECTED0, agt, agt_9, agt_11, agt_16, e, e_13, e_19;
  wire n_0, n_1, n_2, n_3, n_4, n_5, n_6;
  comp_1b_12 comp0(.a (a[0]), .b (b[0]), .equal (UNCONNECTED0),
       .a_larger (agt_16));
  comp_1b_13 comp1(.a (a[1]), .b (b[1]), .equal (e_19), .a_larger
       (agt_11));
  comp_1b_14 comp2(.a (a[2]), .b (b[2]), .equal (e_13), .a_larger
       (agt));
  comp_1b_15 comp3(.a (a[3]), .b (b[3]), .equal (e), .a_larger (agt_9));
  INVX1 g12(.A (e), .Y (n_6));
  INVX1 g13(.A (agt_9), .Y (n_5));
  OAI21X1 g73(.A (n_6), .B (n_1), .C (n_5), .Y (a_gt_b));
  AOI21X1 g74(.A (e_13), .B (n_3), .C (agt), .Y (n_4));
  INVX1 g75(.A (n_0), .Y (n_3));
  AOI21X1 g76(.A (agt_16), .B (e_19), .C (agt_11), .Y (n_2));
  BUFX2 drc_bufs(.A (n_4), .Y (n_1));
  BUFX2 drc_bufs77(.A (n_2), .Y (n_0));
endmodule

module counter_WIDTH4_1(out, clk, en, rst, overflow);
  input clk, en, rst;
  output [3:0] out;
  output overflow;
  wire clk, en, rst;
  wire [3:0] out;
  wire overflow;
  wire n_0, n_7, n_8, n_9, n_10, n_11, n_12, n_13;
  wire n_14, n_15, n_16, n_17, n_18, n_19, n_20, n_21;
  wire n_26, n_27, n_28, n_29;
  DFFSR \out_reg[3] (.R (n_7), .S (1'b1), .CLK (clk), .D (n_19), .Q
       (n_26));
  DFFSR overflow_reg(.R (n_7), .S (1'b1), .CLK (clk), .D (n_21), .Q
       (overflow));
  INVX1 g65(.A (n_20), .Y (n_21));
  MUX2X1 g66(.A (n_16), .B (overflow), .S (en), .Y (n_20));
  INVX1 g67(.A (n_18), .Y (n_19));
  MUX2X1 g68(.A (n_17), .B (out[3]), .S (en), .Y (n_18));
  DFFSR \out_reg[2] (.R (n_7), .S (1'b1), .CLK (clk), .D (n_15), .Q
       (n_27));
  HAX1 g70(.A (out[3]), .B (n_12), .YC (n_16), .YS (n_17));
  INVX1 g71(.A (n_14), .Y (n_15));
  MUX2X1 g72(.A (n_13), .B (out[2]), .S (en), .Y (n_14));
  DFFSR \out_reg[1] (.R (n_7), .S (1'b1), .CLK (clk), .D (n_11), .Q
       (n_28));
  HAX1 g74(.A (out[2]), .B (n_8), .YC (n_12), .YS (n_13));
  INVX1 g75(.A (n_10), .Y (n_11));
  MUX2X1 g76(.A (n_9), .B (out[1]), .S (en), .Y (n_10));
  DFFSR \out_reg[0] (.R (n_7), .S (1'b1), .CLK (clk), .D (n_0), .Q
       (n_29));
  HAX1 g78(.A (out[1]), .B (out[0]), .YC (n_8), .YS (n_9));
  INVX1 g81(.A (rst), .Y (n_7));
  BUFX2 drc_bufs101(.A (n_29), .Y (out[0]));
  BUFX2 drc_bufs103(.A (n_26), .Y (out[3]));
  BUFX2 drc_bufs104(.A (n_27), .Y (out[2]));
  BUFX2 drc_bufs105(.A (n_28), .Y (out[1]));
  XOR2X1 g2(.A (en), .B (out[0]), .Y (n_0));
endmodule

module prg_4b_1(clk, rst, en, bin_in, sn_out, ctr_overflow);
  input clk, rst, en;
  input [3:0] bin_in;
  output sn_out, ctr_overflow;
  wire clk, rst, en;
  wire [3:0] bin_in;
  wire sn_out, ctr_overflow;
  wire [3:0] ctr4_out;
  comp_4b_1 comp4(.a_gt_b (sn_out), .a (bin_in), .b (ctr4_out));
  counter_WIDTH4_1 ctr4(.out (ctr4_out), .clk (clk), .en (en), .rst
       (rst), .overflow (ctr_overflow));
endmodule

module comp_1b_4(a, b, equal, a_larger);
  input a, b;
  output equal, a_larger;
  wire a, b;
  wire equal, a_larger;
  wire n_1;
  AND2X1 g14(.A (n_1), .B (a), .Y (a_larger));
  INVX1 g15(.A (b), .Y (n_1));
endmodule

module comp_1b_5(a, b, equal, a_larger);
  input a, b;
  output equal, a_larger;
  wire a, b;
  wire equal, a_larger;
  wire n_0;
  HAX1 g27(.A (a), .B (n_0), .YC (a_larger), .YS (equal));
  INVX1 g28(.A (b), .Y (n_0));
endmodule

module comp_1b_6(a, b, equal, a_larger);
  input a, b;
  output equal, a_larger;
  wire a, b;
  wire equal, a_larger;
  wire n_0;
  HAX1 g27(.A (a), .B (n_0), .YC (a_larger), .YS (equal));
  INVX1 g28(.A (b), .Y (n_0));
endmodule

module comp_1b_7(a, b, equal, a_larger);
  input a, b;
  output equal, a_larger;
  wire a, b;
  wire equal, a_larger;
  wire n_0;
  HAX1 g27(.A (a), .B (n_0), .YC (a_larger), .YS (equal));
  INVX1 g28(.A (b), .Y (n_0));
endmodule

module comp_1b_8(a, b, equal, a_larger);
  input a, b;
  output equal, a_larger;
  wire a, b;
  wire equal, a_larger;
  wire n_0;
  HAX1 g27(.A (a), .B (n_0), .YC (a_larger), .YS (equal));
  INVX1 g28(.A (b), .Y (n_0));
endmodule

module comp_1b_9(a, b, equal, a_larger);
  input a, b;
  output equal, a_larger;
  wire a, b;
  wire equal, a_larger;
  wire n_0;
  HAX1 g27(.A (a), .B (n_0), .YC (a_larger), .YS (equal));
  INVX1 g28(.A (b), .Y (n_0));
endmodule

module comp_1b_10(a, b, equal, a_larger);
  input a, b;
  output equal, a_larger;
  wire a, b;
  wire equal, a_larger;
  wire n_0;
  HAX1 g27(.A (a), .B (n_0), .YC (a_larger), .YS (equal));
  INVX1 g28(.A (b), .Y (n_0));
endmodule

module comp_1b_11(a, b, equal, a_larger);
  input a, b;
  output equal, a_larger;
  wire a, b;
  wire equal, a_larger;
  wire n_0;
  HAX1 g27(.A (a), .B (n_0), .YC (a_larger), .YS (equal));
  INVX1 g28(.A (b), .Y (n_0));
endmodule

module comp_8b(a_gt_b, a, b);
  input [7:0] a, b;
  output a_gt_b;
  wire [7:0] a, b;
  wire a_gt_b;
  wire UNCONNECTED1, agt, agt_23, agt_25, agt_28, agt_31, agt_34,
       agt_37;
  wire agt_40, e, e_17, e_18, e_19, e_20, e_21, e_22;
  wire n_0, n_1, n_2, n_3, n_4, n_5, n_6, n_7;
  wire n_8, n_9, n_10, n_11, n_12, n_13, n_14, n_15;
  wire n_16;
  comp_1b_4 comp0(.a (a[0]), .b (b[0]), .equal (UNCONNECTED1),
       .a_larger (agt_40));
  comp_1b_5 comp1(.a (a[1]), .b (b[1]), .equal (e_22), .a_larger
       (agt_37));
  comp_1b_6 comp2(.a (a[2]), .b (b[2]), .equal (e_21), .a_larger
       (agt_34));
  comp_1b_7 comp3(.a (a[3]), .b (b[3]), .equal (e_20), .a_larger
       (agt_31));
  comp_1b_8 comp4(.a (a[4]), .b (b[4]), .equal (e_19), .a_larger
       (agt_28));
  comp_1b_9 comp5(.a (a[5]), .b (b[5]), .equal (e_18), .a_larger
       (agt_25));
  comp_1b_10 comp6(.a (a[6]), .b (b[6]), .equal (e_17), .a_larger
       (agt));
  comp_1b_11 comp7(.a (a[7]), .b (b[7]), .equal (e), .a_larger
       (agt_23));
  INVX1 g26(.A (e_20), .Y (n_16));
  INVX1 g27(.A (agt_31), .Y (n_15));
  INVX1 g29(.A (agt_25), .Y (n_14));
  INVX1 g28(.A (e_18), .Y (n_13));
  INVX1 g30(.A (e), .Y (n_12));
  INVX1 g31(.A (agt_23), .Y (n_11));
  OAI21X1 g189(.A (n_12), .B (n_3), .C (n_11), .Y (a_gt_b));
  AOI21X1 g190(.A (e_17), .B (n_9), .C (agt), .Y (n_10));
  OAI21X1 g191(.A (n_13), .B (n_2), .C (n_14), .Y (n_9));
  AOI21X1 g192(.A (e_19), .B (n_7), .C (agt_28), .Y (n_8));
  OAI21X1 g193(.A (n_16), .B (n_1), .C (n_15), .Y (n_7));
  AOI21X1 g194(.A (e_21), .B (n_5), .C (agt_34), .Y (n_6));
  INVX1 g195(.A (n_0), .Y (n_5));
  AOI21X1 g196(.A (agt_40), .B (e_22), .C (agt_37), .Y (n_4));
  BUFX2 drc_bufs(.A (n_10), .Y (n_3));
  BUFX2 drc_bufs197(.A (n_8), .Y (n_2));
  BUFX2 drc_bufs198(.A (n_6), .Y (n_1));
  BUFX2 drc_bufs199(.A (n_4), .Y (n_0));
endmodule

module counter_WIDTH8(out, clk, en, rst, overflow);
  input clk, en, rst;
  output [7:0] out;
  output overflow;
  wire clk, en, rst;
  wire [7:0] out;
  wire overflow;
  wire n_0, n_2, n_3, n_4, n_5, n_6, n_7, n_8;
  wire n_9, n_10, n_11, n_12, n_13, n_14, n_15, n_16;
  wire n_17, n_18, n_19, n_20, n_21, n_22, n_23, n_24;
  wire n_26, n_27, n_30, n_31, n_32, n_33, n_34, n_35;
  wire n_36, n_37, n_50, n_51;
  DFFSR \out_reg[7] (.R (n_2), .S (1'b1), .CLK (clk), .D (n_51), .Q
       (n_30));
  DFFSR \out_reg[6] (.R (n_2), .S (1'b1), .CLK (clk), .D (n_27), .Q
       (n_31));
  INVX1 g149(.A (n_26), .Y (n_27));
  MUX2X1 g150(.A (n_24), .B (out[6]), .S (en), .Y (n_26));
  DFFSR \out_reg[5] (.R (n_2), .S (1'b1), .CLK (clk), .D (n_22), .Q
       (n_32));
  HAX1 g153(.A (out[6]), .B (n_19), .YC (n_23), .YS (n_24));
  INVX1 g154(.A (n_21), .Y (n_22));
  MUX2X1 g155(.A (n_20), .B (out[5]), .S (en), .Y (n_21));
  DFFSR \out_reg[4] (.R (n_2), .S (1'b1), .CLK (clk), .D (n_18), .Q
       (n_33));
  HAX1 g157(.A (out[5]), .B (n_15), .YC (n_19), .YS (n_20));
  INVX1 g158(.A (n_17), .Y (n_18));
  MUX2X1 g159(.A (n_16), .B (out[4]), .S (en), .Y (n_17));
  DFFSR \out_reg[3] (.R (n_2), .S (1'b1), .CLK (clk), .D (n_14), .Q
       (n_34));
  HAX1 g161(.A (out[4]), .B (n_11), .YC (n_15), .YS (n_16));
  INVX1 g162(.A (n_13), .Y (n_14));
  MUX2X1 g163(.A (n_12), .B (out[3]), .S (en), .Y (n_13));
  DFFSR \out_reg[2] (.R (n_2), .S (1'b1), .CLK (clk), .D (n_10), .Q
       (n_35));
  HAX1 g165(.A (out[3]), .B (n_7), .YC (n_11), .YS (n_12));
  INVX1 g166(.A (n_9), .Y (n_10));
  MUX2X1 g167(.A (n_8), .B (out[2]), .S (en), .Y (n_9));
  DFFSR \out_reg[1] (.R (n_2), .S (1'b1), .CLK (clk), .D (n_6), .Q
       (n_36));
  HAX1 g169(.A (out[2]), .B (n_3), .YC (n_7), .YS (n_8));
  INVX1 g170(.A (n_5), .Y (n_6));
  MUX2X1 g171(.A (n_4), .B (out[1]), .S (en), .Y (n_5));
  DFFSR \out_reg[0] (.R (n_2), .S (1'b1), .CLK (clk), .D (n_0), .Q
       (n_37));
  HAX1 g173(.A (out[1]), .B (out[0]), .YC (n_3), .YS (n_4));
  INVX1 g175(.A (rst), .Y (n_2));
  BUFX2 drc_bufs208(.A (n_37), .Y (out[0]));
  BUFX2 drc_bufs209(.A (n_30), .Y (out[7]));
  BUFX2 drc_bufs210(.A (n_31), .Y (out[6]));
  BUFX2 drc_bufs211(.A (n_32), .Y (out[5]));
  BUFX2 drc_bufs212(.A (n_33), .Y (out[4]));
  BUFX2 drc_bufs213(.A (n_34), .Y (out[3]));
  BUFX2 drc_bufs214(.A (n_35), .Y (out[2]));
  BUFX2 drc_bufs215(.A (n_36), .Y (out[1]));
  XOR2X1 g2(.A (en), .B (out[0]), .Y (n_0));
  XOR2X1 g224(.A (n_50), .B (out[7]), .Y (n_51));
  AND2X1 g3(.A (en), .B (n_23), .Y (n_50));
endmodule

module prg_8b(clk, rst, en, bin_in, sn_out, ctr_overflow);
  input clk, rst, en;
  input [7:0] bin_in;
  output sn_out, ctr_overflow;
  wire clk, rst, en;
  wire [7:0] bin_in;
  wire sn_out, ctr_overflow;
  wire [7:0] ctr8_out;
  wire n_9;
  comp_8b comp8(.a_gt_b (sn_out), .a (bin_in), .b (ctr8_out));
  counter_WIDTH8 ctr8(.out (ctr8_out), .clk (clk), .en (en), .rst
       (rst), .overflow (n_9));
endmodule

module counter_WIDTH8_1(out, clk, en, rst, overflow);
  input clk, en, rst;
  output [7:0] out;
  output overflow;
  wire clk, en, rst;
  wire [7:0] out;
  wire overflow;
  wire n_0, n_11, n_12, n_13, n_14, n_15, n_16, n_17;
  wire n_18, n_19, n_20, n_21, n_22, n_23, n_24, n_25;
  wire n_26, n_27, n_28, n_29, n_30, n_31, n_32, n_33;
  wire n_34, n_35, n_36, n_37, n_38, n_39, n_40, n_41;
  wire n_42, n_44, n_45, n_46, n_47, n_48, n_49, n_50;
  wire n_51;
  DFFSR \out_reg[7] (.R (n_11), .S (1'b1), .CLK (clk), .D (n_41), .Q
       (n_44));
  DFFSR overflow_reg(.R (n_11), .S (1'b1), .CLK (clk), .D (n_39), .Q
       (n_42));
  INVX1 g143(.A (n_40), .Y (n_41));
  MUX2X1 g144(.A (n_37), .B (out[7]), .S (en), .Y (n_40));
  INVX1 g145(.A (n_38), .Y (n_39));
  MUX2X1 g146(.A (n_36), .B (overflow), .S (en), .Y (n_38));
  DFFSR \out_reg[6] (.R (n_11), .S (1'b1), .CLK (clk), .D (n_35), .Q
       (n_45));
  HAX1 g148(.A (out[7]), .B (n_32), .YC (n_36), .YS (n_37));
  INVX1 g149(.A (n_34), .Y (n_35));
  MUX2X1 g150(.A (n_33), .B (out[6]), .S (en), .Y (n_34));
  DFFSR \out_reg[5] (.R (n_11), .S (1'b1), .CLK (clk), .D (n_31), .Q
       (n_46));
  HAX1 g152(.A (out[6]), .B (n_28), .YC (n_32), .YS (n_33));
  INVX1 g153(.A (n_30), .Y (n_31));
  MUX2X1 g154(.A (n_29), .B (out[5]), .S (en), .Y (n_30));
  DFFSR \out_reg[4] (.R (n_11), .S (1'b1), .CLK (clk), .D (n_27), .Q
       (n_47));
  HAX1 g156(.A (out[5]), .B (n_24), .YC (n_28), .YS (n_29));
  INVX1 g157(.A (n_26), .Y (n_27));
  MUX2X1 g158(.A (n_25), .B (out[4]), .S (en), .Y (n_26));
  DFFSR \out_reg[3] (.R (n_11), .S (1'b1), .CLK (clk), .D (n_23), .Q
       (n_48));
  HAX1 g160(.A (out[4]), .B (n_20), .YC (n_24), .YS (n_25));
  INVX1 g161(.A (n_22), .Y (n_23));
  MUX2X1 g162(.A (n_21), .B (out[3]), .S (en), .Y (n_22));
  DFFSR \out_reg[2] (.R (n_11), .S (1'b1), .CLK (clk), .D (n_19), .Q
       (n_49));
  HAX1 g164(.A (out[3]), .B (n_16), .YC (n_20), .YS (n_21));
  INVX1 g165(.A (n_18), .Y (n_19));
  MUX2X1 g166(.A (n_17), .B (out[2]), .S (en), .Y (n_18));
  DFFSR \out_reg[1] (.R (n_11), .S (1'b1), .CLK (clk), .D (n_15), .Q
       (n_50));
  HAX1 g168(.A (out[2]), .B (n_12), .YC (n_16), .YS (n_17));
  INVX1 g169(.A (n_14), .Y (n_15));
  MUX2X1 g170(.A (n_13), .B (out[1]), .S (en), .Y (n_14));
  DFFSR \out_reg[0] (.R (n_11), .S (1'b1), .CLK (clk), .D (n_0), .Q
       (n_51));
  HAX1 g172(.A (out[1]), .B (out[0]), .YC (n_12), .YS (n_13));
  INVX1 g174(.A (rst), .Y (n_11));
  BUFX2 drc_bufs211(.A (n_51), .Y (out[0]));
  BUFX2 drc_bufs212(.A (n_42), .Y (overflow));
  BUFX2 drc_bufs213(.A (n_44), .Y (out[7]));
  BUFX2 drc_bufs214(.A (n_45), .Y (out[6]));
  BUFX2 drc_bufs215(.A (n_46), .Y (out[5]));
  BUFX2 drc_bufs216(.A (n_47), .Y (out[4]));
  BUFX2 drc_bufs217(.A (n_48), .Y (out[3]));
  BUFX2 drc_bufs218(.A (n_49), .Y (out[2]));
  BUFX2 drc_bufs219(.A (n_50), .Y (out[1]));
  XOR2X1 g2(.A (en), .B (out[0]), .Y (n_0));
endmodule

module dsc_mac_top(clk, rst, en, input_bin_a, input_bin_b, input_bin_c,
     en_c, bin_out, bin_out_overflow);
  input clk, rst, en, en_c;
  input [3:0] input_bin_a, input_bin_b;
  input [7:0] input_bin_c;
  output [7:0] bin_out;
  output bin_out_overflow;
  wire clk, rst, en, en_c;
  wire [3:0] input_bin_a, input_bin_b;
  wire [7:0] input_bin_c;
  wire [7:0] bin_out;
  wire bin_out_overflow;
  wire ctr4_overflow_a, ctr4_overflow_b, ctr8_overflow_c, op_end,
       sn_add_out, sn_mul_out, sn_out_a, sn_out_b;
  wire sn_out_c, start_add;
  counter_WIDTH1 control(.out (start_add), .clk (ctr4_overflow_b), .en
       (en), .rst (rst), .overflow (op_end));
  det_stoch_scale_add dut_adder(.a (sn_mul_out), .b (sn_out_c), .s
       (start_add), .y (sn_add_out));
  det_stoch_mul dut_mul(.a (sn_out_a), .b (sn_out_b), .y (sn_mul_out));
  prg_4b dut_prg4b_a(.clk (clk), .rst (rst), .en (en), .bin_in
       (input_bin_a), .sn_out (sn_out_a), .ctr_overflow
       (ctr4_overflow_a));
  prg_4b_1 dut_prg4b_b(.clk (ctr4_overflow_a), .rst (rst), .en (en),
       .bin_in (input_bin_b), .sn_out (sn_out_b), .ctr_overflow
       (ctr4_overflow_b));
  prg_8b dut_prg8b_c(.clk (clk), .rst (rst), .en (en_c), .bin_in
       (input_bin_c), .sn_out (sn_out_c), .ctr_overflow
       (ctr8_overflow_c));
  counter_WIDTH8_1 stoch2bin_out(.out (bin_out), .clk (clk), .en
       (sn_add_out), .rst (rst), .overflow (bin_out_overflow));
endmodule

